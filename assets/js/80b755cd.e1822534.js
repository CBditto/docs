"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6212],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),h=o,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||a;return n?i.createElement(m,r(r({ref:t},p),{},{components:n})):i.createElement(m,r({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},97019:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var i=n(87462),o=n(63366),a=(n(67294),n(3905)),r=["components"],l={title:"Setting up your Authentication Webhook"},s=void 0,c={unversionedId:"security/online-with-authentication/setup-authentication-webhook",id:"security/online-with-authentication/setup-authentication-webhook",isDocsHomePage:!1,title:"Setting up your Authentication Webhook",description:"The authentication webhook needs to handle an HTTP POST request. Each client that will need to authenticate will send a payload to this webhook. The following section requires that you have knowledge of writing server side HTTP endpoints and responding with a JSON payload. Code samples of server side code are written with a NodeJS / Express syntax. You can use any language or framework on the server side.",source:"@site/docs/security/online-with-authentication/setup-authentication-webhook.mdx",sourceDirName:"security/online-with-authentication",slug:"/security/online-with-authentication/setup-authentication-webhook",permalink:"/security/online-with-authentication/setup-authentication-webhook",editUrl:"https://github.com/getditto/docs/edit/master/docs/security/online-with-authentication/setup-authentication-webhook.mdx",tags:[],version:"current",frontMatter:{title:"Setting up your Authentication Webhook"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/security/online-with-authentication/overview"},next:{title:"Setup Client Side",permalink:"/security/online-with-authentication/setup-client-side"}},p=[{value:"Incoming POST body",id:"incoming-post-body",children:[],level:2},{value:"Rejecting a user",id:"rejecting-a-user",children:[{value:"Accepting a user and granting permissions",id:"accepting-a-user-and-granting-permissions",children:[{value:"The <code>permissions</code> response key",id:"the-permissions-response-key",children:[{value:"Granting full permissions on all collections and all documents",id:"granting-full-permissions-on-all-collections-and-all-documents",children:[],level:5},{value:"Granting selective permissions on certain documents",id:"granting-selective-permissions-on-certain-documents",children:[],level:5}],level:4}],level:3}],level:2},{value:"Configure your Portal App",id:"configure-your-portal-app",children:[],level:2}],u={toc:p};function d(e){var t=e.components,l=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The authentication webhook needs to handle an ",(0,a.kt)("strong",{parentName:"p"},"HTTP POST")," request. Each client that will need to authenticate will send a payload to this webhook. The following section requires that you have knowledge of writing server side HTTP endpoints and responding with a JSON payload. Code samples of server side code are written with a NodeJS / Express syntax. You can use any language or framework on the server side. "),(0,a.kt)("p",null,"This section will not cover how to write server side code in depth or how to deploy your server side. "),(0,a.kt)("h2",{id:"incoming-post-body"},"Incoming POST body"),(0,a.kt)("p",null,"When your client device wants to authenticate using your webhook, your code will receive an HTTP post with a JSON payload that looks like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "appID": "ce914163-2df7-4985-9821-7034891cdcda", // the appID\n  "provider": "my-auth", // this is the "Name" of the "Authentication Webhook"\n  "token": "eyJhbGciOiJI..." // this is what each device will send to authenticate\n}\n')),(0,a.kt)("p",null,"Your can introspect these values by parsing out the request body:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"server.post('/', (req, res) => {\n  const appID = req.body.appID\n  const provider = req.body.provider\n  const token = req.body.token\n})\n")),(0,a.kt)("h2",{id:"rejecting-a-user"},"Rejecting a user"),(0,a.kt)("p",null,"To reject a user respond with a JSON payload below. You do not need to manipulate the HTTP response status."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "authenticate": false\n}\n')),(0,a.kt)("p",null,"Generally, you will want to check the token for some sort of validity. Let's assume you have some sort of library or logic to parse and validate the token is for a specific user. You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"userInfo")," key in your JSON response to pass information back to client."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'server.post(\'/\', async (req, res) => {\n  const token = req.body.token;\n  try {\n    const { userId } = await checkToken(token)\n    // omitted for brevity\n  } catch (err) {\n    res.json({\n      "authenticate": err,\n      "userInfo": err.message\n    }) \n  }\n})\n')),(0,a.kt)("h3",{id:"accepting-a-user-and-granting-permissions"},"Accepting a user and granting permissions"),(0,a.kt)("p",null,"To accept a user, the JSON payload needs to contain information about:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"authenticate")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," to tell the webhook that the user has successfully validated"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"expirationSeconds")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"number")," property on how long the authentication session is valid for before a refresh is required."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"userID")," is a ",(0,a.kt)("inlineCode",{parentName:"li"},"string")," which identifies the the ",(0,a.kt)("inlineCode",{parentName:"li"},"userID"),". This should be ",(0,a.kt)("em",{parentName:"li"},"unique")," across users within your app. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"permissions")," which describes all the types of access control for collections and documents that this user can ",(0,a.kt)("inlineCode",{parentName:"li"},"read")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"write"))),(0,a.kt)("p",null,"An example response might look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "authenticate": true,\n  "expirationSeconds": 28800,\n  "userID": "123abc",\n  "permissions": {\n    "read": {\n      "everything": false,\n      "queriesByCollection": {\n        "books": [\n          "endsWith(_id, \'Potter\')"\n        ],\n        "my_collection": [\n          "_id == \'my-specific-id\'",\n          "_id == \'id1\' || _id == \'id2\'"\n        ],\n        "my_favorite_integers": [\n          "_id > 100",\n          "_id > -10 && _id < 10"\n        ],\n        "test": [\n          "true"\n        ],\n        "weird_bools_collection": [\n          "_id == false"\n        ]\n      }\n    },\n    "write": {\n      "everything": false,\n      "queriesByCollection": {\n        "boats": [\n          "regex(_id, \'^Wave.*\')"\n        ],\n        "test": [\n          "true"\n        ]\n      }\n    }\n  }\n}\n')),(0,a.kt)("h4",{id:"the-permissions-response-key"},"The ",(0,a.kt)("inlineCode",{parentName:"h4"},"permissions")," response key"),(0,a.kt)("p",null,"The permissions key in your JSON response describes access control rules for the user. It has two required sub keys ",(0,a.kt)("inlineCode",{parentName:"p"},"write")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"read"),". "),(0,a.kt)("h5",{id:"granting-full-permissions-on-all-collections-and-all-documents"},"Granting full permissions on all collections and all documents"),(0,a.kt)("p",null,"To grant full ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," permissions to ",(0,a.kt)("em",{parentName:"p"},"all collections")," and ",(0,a.kt)("em",{parentName:"p"},"all documents"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "authenticate": true,\n  "expirationSeconds": 28800,\n  "userID": "123abc",\n  "permissions": {\n    // highlight-start\n    "read": {\n      "everything": true,\n      "queriesByCollection": {}\n    },\n    "write": {\n      "everything": false,\n      "queriesByCollection": {}\n    }\n    // highlight-end\n  }\n}\n')),(0,a.kt)("p",null,"To grant full ",(0,a.kt)("inlineCode",{parentName:"p"},"write")," permissions to ",(0,a.kt)("em",{parentName:"p"},"all collections")," and ",(0,a.kt)("em",{parentName:"p"},"all documents"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "authenticate": true,\n  "expirationSeconds": 28800,\n  "userID": "123abc",\n  "permissions": {\n    "read": {\n      "everything": false,\n      "queriesByCollection": {}\n    },\n    "write": {\n      "everything": true,\n      "queriesByCollection": {}\n    }\n  }\n}\n')),(0,a.kt)("p",null,"To grant full ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"write")," permissions to ",(0,a.kt)("em",{parentName:"p"},"all collections")," and ",(0,a.kt)("em",{parentName:"p"},"all documents"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "authenticate": true,\n  "expirationSeconds": 28800,\n  "userID": "123abc",\n  "permissions": {\n    "read": {\n      "everything": true,\n      "queriesByCollection": {}\n    },\n    "write": {\n      "everything": true,\n      "queriesByCollection": {}\n    }\n  }\n}\n')),(0,a.kt)("h5",{id:"granting-selective-permissions-on-certain-documents"},"Granting selective permissions on certain documents"),(0,a.kt)("p",null,"To grant selective permissions on specific documents, add to the ",(0,a.kt)("inlineCode",{parentName:"p"},"queriesByCollection")," property inside either the ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"write")," property. Each key inside ",(0,a.kt)("inlineCode",{parentName:"p"},"queriesByCollection")," is a reference to the collection. Each value is an array of ",(0,a.kt)("a",{parentName:"p",href:"/concepts/querying"},"ditto queries")," describing which documents the user can read or write."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Currently, you can ",(0,a.kt)("strong",{parentName:"p"},"only specify a permission query on the ",(0,a.kt)("inlineCode",{parentName:"strong"},"_id")," field of a document"),". Mutable properties are currently not supported. We are working on adding this feature."))),(0,a.kt)("p",null,"The following write permissions below describe that ",(0,a.kt)("inlineCode",{parentName:"p"},'userID: "123abc"')," can"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"write")," to documents in the ",(0,a.kt)("inlineCode",{parentName:"li"},'"books"')," collection where the ",(0,a.kt)("inlineCode",{parentName:"li"},"_id.title")," value ",(0,a.kt)("inlineCode",{parentName:"li"},"endsWith('Potter')"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"write")," to any document in the ",(0,a.kt)("inlineCode",{parentName:"li"},'"newspapers"')," collection. We use a single value of ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," "),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"read")," to documents in the ",(0,a.kt)("inlineCode",{parentName:"li"},'"books"')," collection where the ",(0,a.kt)("inlineCode",{parentName:"li"},"_id.title")," value ",(0,a.kt)("inlineCode",{parentName:"li"},"endsWith('Potter')"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "authenticate": true,\n  "expirationSeconds": 28800,\n  "userID": "123abc",\n  "permissions": {\n    "write": {\n      "everything": false, // ensure that this is false\n      "queriesByCollection": {\n        // highlight-start\n        // 1. \n        "books": [\n          "endsWith(_id.title, \'Potter\')"\n        ],\n        // highlight-end\n        \n        // highlight-start\n        // 2. \n        "newspapers": [\n          "true"\n        ]\n        // highlight-end\n      }\n    },\n    "read": {\n      "everything": false, // ensure that this is false\n      "queriesByCollection": {\n        // highlight-start\n        // 3.\n        "books": [\n          "endsWith(_id.title, \'Potter\')"\n        ],\n        // highlight-end\n      }\n    }\n  }\n}\n')),(0,a.kt)("p",null,"Finally, deploy this application to a server that can be accessible by Ditto's cloud platform. ",(0,a.kt)("strong",{parentName:"p"},"You will need the URL in the next section.")),(0,a.kt)("h2",{id:"configure-your-portal-app"},"Configure your Portal App"),(0,a.kt)("p",null,'To use an "Online With Authentication" identity, go to your app in the ',(0,a.kt)("a",{parentName:"p",href:"https://portal.ditto.live/"},"portal")," and find the ",(0,a.kt)("strong",{parentName:"p"},"Authentication Mode & Webhook Settings")," section. Ensure that ",(0,a.kt)("strong",{parentName:"p"},'"With Authentication"')," is selected like so:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Online With Authentication setting in Portal",src:n(720).Z})),(0,a.kt)("p",null,"Below, a section called ",(0,a.kt)("strong",{parentName:"p"},"Authentication Webhooks")," will be editable. Once your Authentication Webhook Endpoint(s) is deployed and ready, you can register it in the portal. Add a ",(0,a.kt)("strong",{parentName:"p"},"Name")," and ",(0,a.kt)("strong",{parentName:"p"},"URL"),". "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"Name")," is used the differentiate between multiple authentication. Most applications will have one authentication webhook, however the ",(0,a.kt)("strong",{parentName:"li"},"Name")," parameter is still required. This name value is important for the next section."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"URL")," parameter is the fully qualified URL of the webhook that you deployed in the section above. Please include the protocol (",(0,a.kt)("em",{parentName:"li"},"https:// or http://")," though we highly discourage ",(0,a.kt)("em",{parentName:"li"},"http://"),"). Please be sure that this endpoint is not behind a firewall or VPN. If you cannot get around this requirement ",(0,a.kt)("a",{parentName:"li",href:"mailto:contact@ditto.live"},"contact us"),". ")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Sample Authentication Webhook Endpoint in the Portal",src:n(32180).Z})),(0,a.kt)("p",null,"Click ",(0,a.kt)("strong",{parentName:"p"},"Add")," to register the webhook in your portal app. Now client applications that need to authenticate will be able to use these endpoints."))}d.isMDXComponent=!0},720:function(e,t,n){t.Z=n.p+"assets/images/portal-with-authentication-setting-db905a14e187f9e15d460735da4712ad.png"},32180:function(e,t,n){t.Z=n.p+"assets/images/sample-authentication-webhook-endpoint-bcf6ba631bbd3e5b7a4d7f9fc802d2dc.png"}}]);