(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7445],{80151:function(e,t,n){"use strict";n.d(t,{ZP:function(){return K},Yv:function(){return L}});var i,o,a,r,s,d,c,l,p,h,u,f,m,g,y,w,_,v,D=n(81880),b=n(67294),T=n(49366),S=n(30547),A=n(52263),x=n(81249),k=n.n(x),I=n(18464),Z=n(30381),j=n.n(Z),F=n(9980),C=n.n(F),q=n(99013),O=(y=n(99151)||{},w=C()(),_=["android","cocoa","cpp","dotnet","js","rustsdk"],v={},Object.keys(y).forEach((function(e){_.includes(e)&&(v[e]=[],Object.keys(y[e]).sort((function(e,t){return"Ditto"===e||"DittoObjC"===e||"DittoSwift"===e||"Ditto"===t||"DittoObjC"===t||"DittoSwift"===t?-1:t.length-e.length})).forEach((function(t){Object.keys(y[e][t]).filter((function(e){return"latest"!==e})).sort((function(e,t){return k().compare(t,e)})).forEach((function(n){var c=y[e][t][n],l={framework:t,version:n,apiReferenceDocsURL:c.api_reference_docs_url,dateReleased:j()(c.date_released).format("ddd MMM Do YYYY, h:mm a"),description:w.render(c.description)};if("cocoa"===e&&(l.installationSnippet=w.render((0,I.C)(i||(i=(0,D.Z)(["\n              ~~~ruby\n              pod '","', '=","'\n              ~~~\n              "])),t,n)),l.friendlyName="Cocoa",l.friendlyDescription="iOS 12.0 and higher","DittoObjC"===t?l.languageOrPlatform="ObjC":"DittoSwift"===t&&(l.languageOrPlatform="Swift")),"android"===e){var p=t.toLowerCase();l.installationSnippet=w.render((0,I.C)(o||(o=(0,D.Z)(['\n              ~~~html\n              implementation "live.ditto:',":",'"\n              ~~~'])),p,n)),l.friendlyName="Android",l.friendlyDescription="Android v7.1 and higher"}"cpp"===e&&(l.friendlyName="C++",l.friendlyDescription="C++11 and higher",l.installationSnippet=w.render((0,I.C)(a||(a=(0,D.Z)(["\n              iOS\n              ~~~shell\n              curl -O https://software.ditto.live/cpp-ios/Ditto/","/dist/Ditto.tar.gz && tar xvfz Ditto.tar.gz\n              ~~~\n\n              Linux x64_64\n              ~~~shell\n              curl -O https://software.ditto.live/cpp-linux-x86_64/Ditto/","/dist/Ditto.tar.gz && tar xvfz Ditto.tar.gz\n              ~~~\n              "])),n,n))),"dotnet"===e&&(l.friendlyName=".NET",l.friendlyDescription=".NET Standard 2.1",l.installationSnippet=w.render((0,I.C)(r||(r=(0,D.Z)(["\n              Command Line\n              ~~~html\n              Install-Package Ditto -Version ",'\n              ~~~\n\n              PackageReference\n              ~~~xml\n              <PackageReference Include="Ditto" Version=','" />\n              ~~~\n              '])),n,n))),"js"===e&&(l.friendlyName="JS",l.friendlyDescription="Web only",l.installationSnippet=w.render((0,I.C)(s||(s=(0,D.Z)(["\n              ~~~shell\n              npm install --save @dittolive/ditto@","\n              ~~~\n\n              If you have yarn:\n\n              ~~~shell\n              yarn add @dittolive/ditto@","\n              ~~~\n              "])),n,n))),"rustsdk"===e&&(l.friendlyName="Rust",l.friendlyDescription="Rust 1.31 (2018 Edition)",l.installationSnippet=w.render((0,I.C)(d||(d=(0,D.Z)(["\n              ~~~toml\n              [dependencies.dittolive-ditto]\n              version = ","\n              ~~~\n              "])),n))),v[e].push(l)}))})))})),v);function P(e){var t=e.sdkInfos,n=e.title;return b.createElement("div",null,t.map((function(e,t){return b.createElement("div",{key:t,className:"margin-bottom--md"},b.createElement("h3",null,n," Version ",e.version," "),b.createElement("p",null,"Released: ",e.dateReleased),b.createElement("p",{className:""},"Release Notes:"),b.createElement("div",{dangerouslySetInnerHTML:{__html:e.description}}),b.createElement("p",null,"Installation: "),b.createElement("div",{dangerouslySetInnerHTML:{__html:e.installationSnippet}}),b.createElement("a",{role:"button",style:{color:"white",textDecoration:"none"},className:"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 text-white",href:e.apiReferenceDocsURL},"API Reference URL"))})))}function K(){(0,A.Z)().siteConfig;var e=O;return b.createElement("div",{className:"prose prose-lg max-w-none"},b.createElement("div",{className:"col margin-vert--lg",style:{maxWidth:"800px"}},b.createElement(T.Z,{defaultValue:"swift",groupId:"framework",values:[{label:"JavaScript",value:"javascript"},{label:"Swift",value:"swift"},{label:"ObjC",value:"objc"},{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"},{label:"C#",value:"csharp"},{label:"C++",value:"cpp"},{label:"Rust",value:"rust"}]},b.createElement(S.Z,{value:"javascript"},b.createElement(P,{title:"JavaScript",sdkInfos:e.js})),b.createElement(S.Z,{value:"swift"},b.createElement(P,{title:"DittoSwift",sdkInfos:e.cocoa})),b.createElement(S.Z,{value:"objc"},b.createElement(P,{title:"DittoObjC",sdkInfos:e.cocoa})),b.createElement(S.Z,{value:"java"},b.createElement(P,{title:"Java Android",sdkInfos:e.android})),b.createElement(S.Z,{value:"kotlin"},b.createElement(P,{title:"Kotlin Android",sdkInfos:e.android})),b.createElement(S.Z,{value:"csharp"},b.createElement(P,{title:"C# / .NET",sdkInfos:e.dotnet})),b.createElement(S.Z,{value:"cpp"},b.createElement(P,{title:"C++ Linux / iOS",sdkInfos:e.cpp})),b.createElement(S.Z,{value:"rust"},b.createElement(P,{title:"Rust",sdkInfos:e.rustsdk})))))}function L(e){var t=e.framework,n=e.variant,i=O[t][0],o="";switch(t){case"js":o=(0,I.C)(c||(c=(0,D.Z)(["\n        # using npm\n        npm install @dittolive/ditto@"," --save\n\n        # using yarn\n        yarn add @dittolive/ditto@","\n      "])),i.version,i.version);break;case"cocoa":"swift"===n&&(o=(0,I.C)(l||(l=(0,D.Z)(["\n        pod 'DittoSwift', '=","'\n      "])),i.version)),"objc"===n&&(o=(0,I.C)(p||(p=(0,D.Z)(["\n        pod 'DittoObjC', '=","'\n      "])),i.version));break;case"android":o=(0,I.C)(h||(h=(0,D.Z)(['\n      dependencies {\n        // ...\n        implementation "live.ditto:ditto:','"\n      }\n\n      android {\n        // ...\n\n        compileOptions {\n            sourceCompatibility JavaVersion.VERSION_1_8\n            targetCompatibility JavaVersion.VERSION_1_8\n        }\n      }\n      '])),i.version);case"dotnet":"package-manager"===n&&(o=(0,I.C)(u||(u=(0,D.Z)(["Install-Package Ditto -Version ",""])),i.version)),"cli"===n&&(o=(0,I.C)(f||(f=(0,D.Z)(["dotnet add package Ditto --version ",""])),i.version)),"package-reference"===n&&(o=(0,I.C)(m||(m=(0,D.Z)(['<PackageReference Include="Ditto" Version="','" />'])),i.version));break;case"cpp":o="curl -O https://software.ditto.live/cpp-"+n+"/Ditto/"+i.version+"/dist/Ditto.tar.gz && tar xvfz Ditto.tar.gz";break;case"rustsdk":o=(0,I.C)(g||(g=(0,D.Z)(['\n      [dependencies.dittolive-ditto]\n      version = "','"\n      '])),i.version)}return b.createElement(q.Z,null,o)}},99013:function(e,t,n){"use strict";n.d(t,{Z:function(){return A}});var i=n(87462),o=n(67294),a=n(86010),r=n(23746),s=n(10195),d=n(87594),c=n.n(d),l=n(95999),p=n(67804),h=n(71418),u="codeBlockContainer_2gih",f="codeBlockContent_3z4W",m="codeBlockTitle_1Kb7",g="codeBlock_6upA",y="copyButton_2e3i",w="codeBlockLines_xlV7",_=n(60370),v=/{([\d,-]+)}/,D=["js","jsBlock","jsx","python","html"],b={js:{start:"\\/\\/",end:""},jsBlock:{start:"\\/\\*",end:"\\*\\/"},jsx:{start:"\\{\\s*\\/\\*",end:"\\*\\/\\s*\\}"},python:{start:"#",end:""},html:{start:"\x3c!--",end:"--\x3e"}},T=["highlight-next-line","highlight-start","highlight-end"],S=function(e){void 0===e&&(e=D);var t=e.map((function(e){var t=b[e],n=t.start,i=t.end;return"(?:"+n+"\\s*("+T.join("|")+")\\s*"+i+")"})).join("|");return new RegExp("^\\s*(?:"+t+")\\s*$")};function A(e){var t=e.children,n=e.className,d=e.metastring,D=e.title,b=(0,_.LU)().prism,T=(0,o.useState)(!1),A=T[0],x=T[1],k=(0,o.useState)(!1),I=k[0],Z=k[1];(0,o.useEffect)((function(){Z(!0)}),[]);var j=(0,_.bc)(d)||D,F=(0,o.useRef)(null),C=[],q=Array.isArray(t)?t.join(""):t;if(d&&v.test(d)){var O=d.match(v)[1];C=c()(O).filter((function(e){return e>0}))}var P=null==n?void 0:n.replace(/language-/,"");!P&&b.defaultLanguage&&(P=b.defaultLanguage);var K=q.replace(/\n$/,"");if(0===C.length&&void 0!==P){for(var L,N="",E=function(e){switch(e){case"js":case"javascript":case"ts":case"typescript":return S(["js","jsBlock"]);case"jsx":case"tsx":return S(["js","jsBlock","jsx"]);case"html":return S(["js","jsBlock","html"]);case"python":case"py":return S(["python"]);default:return S()}}(P),R=q.replace(/\n$/,"").split("\n"),z=0;z<R.length;){var B=z+1,W=R[z].match(E);if(null!==W){switch(W.slice(1).reduce((function(e,t){return e||t}),void 0)){case"highlight-next-line":N+=B+",";break;case"highlight-start":L=B;break;case"highlight-end":N+=L+"-"+(B-1)+","}R.splice(z,1)}else z+=1}C=c()(N),K=R.join("\n")}var M=function(){(0,s.Z)(K),x(!0),setTimeout((function(){return x(!1)}),2e3)};return o.createElement(r.ZP,(0,i.Z)({},r.lG,{key:String(I),theme:h.Z,code:K,language:P}),(function(e){var t=e.className,n=e.style,r=e.tokens,s=e.getLineProps,d=e.getTokenProps;return o.createElement("div",{className:u},j&&o.createElement("div",{style:n,className:m},j),o.createElement("div",{className:(0,a.Z)(f,P)},o.createElement("pre",{tabIndex:0,className:(0,a.Z)(t,g,"thin-scrollbar")},o.createElement("code",{className:w},r.map((function(e,t){1===e.length&&""===e[0].content&&(e[0].content="\n");var n=s({line:e,key:t}),r=C.includes(t+1);C.includes(t+1)&&(n.className+="bg-gray-800 docusaurus-highlight-code-line");var c=(0,a.Z)(n.className,r&&"bg-gray-700");return o.createElement("span",(0,i.Z)({key:t},n,{className:c}),e.map((function(e,t){var n=Object.assign({},d({token:e,key:t})),r=n.className;return r.includes("inserted-sign")&&(r=(0,a.Z)(r,"bg-green-900")),r.includes("deleted-sign")&&(r=(0,a.Z)(r,"bg-red-900")),o.createElement("span",(0,i.Z)({key:t},n,{className:r}))})))})))),o.createElement("button",{ref:F,type:"button","aria-label":(0,l.I)({id:"theme.CodeBlock.copyButtonAriaLabel",message:"Copy code to clipboard",description:"The ARIA label for copy code blocks button"}),className:(0,a.Z)(y,"clean-btn",A?"bg-green-500":""),onClick:M},A?o.createElement("div",null,o.createElement(p.C2q,{className:"w-4 h-4 inline mr-1"}),o.createElement("span",{className:"text-xs"},"Copied")):o.createElement("div",null,o.createElement(p.Kmg,{className:"w-4 h-4 inline mr-1"}),o.createElement("span",{className:"text-xs"},"Copy")))))}))}},30547:function(e,t,n){"use strict";var i=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return i.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},49366:function(e,t,n){"use strict";var i=n(67294),o=n(80944),a=n(86010);t.Z=function(e){var t,n=e.lazy,r=(e.block,e.defaultValue),s=e.values,d=e.groupId,c=(e.className,i.Children.toArray(e.children)),l=null!=s?s:c.map((function(e){return{value:e.props.value,label:e.props.label}})),p=null!=r?r:null==(t=c.find((function(e){return e.props.default})))?void 0:t.props.value,h=(0,o.Z)(),u=h.tabGroupChoices,f=h.setTabGroupChoices,m=(0,i.useState)(p),g=m[0],y=m[1];if(null!=d){var w=u[d];null!=w&&w!==g&&l.some((function(e){return e.value===w}))&&y(w)}var _=function(e){y(e),null!=d&&f(d,e)};return i.createElement("div",{className:"tabs-container"},i.createElement("div",{className:"sm:hidden"},i.createElement("label",{htmlFor:"tabs",className:"sr-only"},"Select a tab"),i.createElement("select",{id:"tabs",name:"tabs",value:g,onChange:function(e){return _(e.currentTarget.value)},className:"block w-full focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md"},l.map((function(e){var t=e.value,n=e.label;return i.createElement("option",{value:t,key:t},null!=n?n:t)})))),i.createElement("div",{className:"hidden sm:block"},i.createElement("nav",{className:"flex space-x-4","aria-label":"Tabs"},l.map((function(e){var t=e.value,n=e.label;return i.createElement("button",{key:t,onClick:function(){return _(t)},className:(0,a.Z)(g===t?"bg-blue-100 text-blue-700":"text-gray-500 hover:text-gray-700","px-3 py-2 font-medium text-sm rounded-md"),"aria-current":g===t?"page":void 0},null!=n?n:t)})))),n?(0,i.cloneElement)(c.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},c.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))}},80997:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var i=n(87462),o=n(63366),a=(n(67294),n(3905)),r=n(80151),s=["components"],d={title:"Changelog",sidebar_position:15},c=void 0,l={unversionedId:"changelog",id:"changelog",isDocsHomePage:!1,title:"Changelog",description:"",source:"@site/docs/changelog.mdx",sourceDirName:".",slug:"/changelog",permalink:"/changelog",editUrl:"https://github.com/getditto/docs/edit/master/docs/changelog.mdx",tags:[],version:"current",sidebarPosition:15,frontMatter:{title:"Changelog",sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"Frequently Asked Questions",permalink:"/faq"}},p=[],h={toc:p};function u(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(r.ZP,{mdxType:"Changelog"}))}u.isMDXComponent=!0},46700:function(e,t,n){var i={"./af":42786,"./af.js":42786,"./ar":30867,"./ar-dz":14130,"./ar-dz.js":14130,"./ar-kw":96135,"./ar-kw.js":96135,"./ar-ly":56440,"./ar-ly.js":56440,"./ar-ma":47702,"./ar-ma.js":47702,"./ar-sa":16040,"./ar-sa.js":16040,"./ar-tn":37100,"./ar-tn.js":37100,"./ar.js":30867,"./az":31083,"./az.js":31083,"./be":9808,"./be.js":9808,"./bg":68338,"./bg.js":68338,"./bm":67438,"./bm.js":67438,"./bn":8905,"./bn-bd":76225,"./bn-bd.js":76225,"./bn.js":8905,"./bo":11560,"./bo.js":11560,"./br":1278,"./br.js":1278,"./bs":80622,"./bs.js":80622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":50877,"./cv.js":50877,"./cy":47373,"./cy.js":47373,"./da":24780,"./da.js":24780,"./de":59740,"./de-at":60217,"./de-at.js":60217,"./de-ch":60894,"./de-ch.js":60894,"./de.js":59740,"./dv":5300,"./dv.js":5300,"./el":50837,"./el.js":50837,"./en-au":78348,"./en-au.js":78348,"./en-ca":77925,"./en-ca.js":77925,"./en-gb":22243,"./en-gb.js":22243,"./en-ie":46436,"./en-ie.js":46436,"./en-il":47207,"./en-il.js":47207,"./en-in":44175,"./en-in.js":44175,"./en-nz":76319,"./en-nz.js":76319,"./en-sg":31662,"./en-sg.js":31662,"./eo":92915,"./eo.js":92915,"./es":55655,"./es-do":55251,"./es-do.js":55251,"./es-mx":96112,"./es-mx.js":96112,"./es-us":71146,"./es-us.js":71146,"./es.js":55655,"./et":5603,"./et.js":5603,"./eu":77763,"./eu.js":77763,"./fa":76959,"./fa.js":76959,"./fi":11897,"./fi.js":11897,"./fil":42549,"./fil.js":42549,"./fo":94694,"./fo.js":94694,"./fr":94470,"./fr-ca":63049,"./fr-ca.js":63049,"./fr-ch":52330,"./fr-ch.js":52330,"./fr.js":94470,"./fy":5044,"./fy.js":5044,"./ga":29295,"./ga.js":29295,"./gd":2101,"./gd.js":2101,"./gl":38794,"./gl.js":38794,"./gom-deva":27884,"./gom-deva.js":27884,"./gom-latn":23168,"./gom-latn.js":23168,"./gu":95349,"./gu.js":95349,"./he":24206,"./he.js":24206,"./hi":30094,"./hi.js":30094,"./hr":30316,"./hr.js":30316,"./hu":22138,"./hu.js":22138,"./hy-am":11423,"./hy-am.js":11423,"./id":29218,"./id.js":29218,"./is":90135,"./is.js":90135,"./it":90626,"./it-ch":10150,"./it-ch.js":10150,"./it.js":90626,"./ja":39183,"./ja.js":39183,"./jv":24286,"./jv.js":24286,"./ka":12105,"./ka.js":12105,"./kk":47772,"./kk.js":47772,"./km":18758,"./km.js":18758,"./kn":79282,"./kn.js":79282,"./ko":33730,"./ko.js":33730,"./ku":1408,"./ku.js":1408,"./ky":33291,"./ky.js":33291,"./lb":36841,"./lb.js":36841,"./lo":55466,"./lo.js":55466,"./lt":57010,"./lt.js":57010,"./lv":37595,"./lv.js":37595,"./me":39861,"./me.js":39861,"./mi":35493,"./mi.js":35493,"./mk":95966,"./mk.js":95966,"./ml":87341,"./ml.js":87341,"./mn":5115,"./mn.js":5115,"./mr":10370,"./mr.js":10370,"./ms":9847,"./ms-my":41237,"./ms-my.js":41237,"./ms.js":9847,"./mt":72126,"./mt.js":72126,"./my":56165,"./my.js":56165,"./nb":64924,"./nb.js":64924,"./ne":16744,"./ne.js":16744,"./nl":93901,"./nl-be":59814,"./nl-be.js":59814,"./nl.js":93901,"./nn":83877,"./nn.js":83877,"./oc-lnc":92135,"./oc-lnc.js":92135,"./pa-in":15858,"./pa-in.js":15858,"./pl":64495,"./pl.js":64495,"./pt":89520,"./pt-br":57971,"./pt-br.js":57971,"./pt.js":89520,"./ro":96459,"./ro.js":96459,"./ru":21793,"./ru.js":21793,"./sd":40950,"./sd.js":40950,"./se":10490,"./se.js":10490,"./si":90124,"./si.js":90124,"./sk":64249,"./sk.js":64249,"./sl":14985,"./sl.js":14985,"./sq":51104,"./sq.js":51104,"./sr":49131,"./sr-cyrl":79915,"./sr-cyrl.js":79915,"./sr.js":49131,"./ss":85893,"./ss.js":85893,"./sv":98760,"./sv.js":98760,"./sw":91172,"./sw.js":91172,"./ta":27333,"./ta.js":27333,"./te":23110,"./te.js":23110,"./tet":52095,"./tet.js":52095,"./tg":27321,"./tg.js":27321,"./th":9041,"./th.js":9041,"./tk":19005,"./tk.js":19005,"./tl-ph":75768,"./tl-ph.js":75768,"./tlh":89444,"./tlh.js":89444,"./tr":72397,"./tr.js":72397,"./tzl":28254,"./tzl.js":28254,"./tzm":51106,"./tzm-latn":30699,"./tzm-latn.js":30699,"./tzm.js":51106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":67691,"./uk.js":67691,"./ur":13795,"./ur.js":13795,"./uz":6791,"./uz-latn":60588,"./uz-latn.js":60588,"./uz.js":6791,"./vi":65666,"./vi.js":65666,"./x-pseudo":14378,"./x-pseudo.js":14378,"./yo":75805,"./yo.js":75805,"./zh-cn":83839,"./zh-cn.js":83839,"./zh-hk":55726,"./zh-hk.js":55726,"./zh-mo":99807,"./zh-mo.js":99807,"./zh-tw":74152,"./zh-tw.js":74152};function o(e){var t=a(e);return n(t)}function a(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}o.keys=function(){return Object.keys(i)},o.resolve=a,e.exports=o,o.id=46700},99151:function(e){"use strict";e.exports=JSON.parse('{"cocoa":{"DittoKit":{"latest":{"description":"* Note that this is a release with breaking changes, even just in terms of clients running 0.4.0 not being able to communicate with clients running 0.3.X releases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.4.0-alpha1/api-reference/","date_released":"2020-09-29T08:18:47.875Z"},"0.1.5":{"description":"* Improved handling of retrieving numeric fields from documents\\n* mDNS/AWDL now correctly filters remote peers by app name\\n* Single document update operation closures now have the document as an optional parameter","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.5/api-reference/","date_released":"2019-10-13T22:37:39.873Z"},"0.1.6":{"description":"* The full SDK API is now usable from Objective-C. Some classes that couldn\'t be represented in Objective-C have counterparts with an ObjC suffix","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.6/api-reference/","date_released":"2019-10-15T11:57:12.001Z"},"0.1.7":{"description":"* Various Bluetooth Low Energy related fixes to make Bluetooth-based communication more reliable.\\n* Accessing a collection using the `collection` function on `DittoStore` is no longer a throwing call and the `name` parameter has been removed.\\n* Accessing a collection can now be done by using a subscript on `DittoStore`, e.g. `store[\\"my-collection\\"]`.\\n* Live query and transport condition updates are now delivered on the main queue by default. You can specify different queues to be used if required.\\n* Adds `queriesHash` and `queriesHashMnemonic` to `DittoStore`, which allow you to get either a numberc hash or string-based mnemonic representation of a client\'s state in relation to the specified queries.\\n* Fixes a `DittoDocument`-related memory leak.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.7/api-reference/","date_released":"2019-10-29T08:09:30.315Z"},"0.1.8":{"description":"* Fixed Bluetooth Low Energy issue on iOS where sync may never complete, particularly with multiple devices\\n* Cocoa SDK detects when WiFi is disabled\\n* Significant performance improvements in synchronization processing","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.8/api-reference/","date_released":"2019-11-14T03:22:32.479Z"},"0.1.9":{"description":"* Fixed Bluetooth LE issue specific to older iOS devices (iPhone 6, iPad Mini 4) where sync can fail after the device is locked","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.9/api-reference/","date_released":"2019-11-25T11:37:40.912Z"},"0.2.0":{"description":"* iOS: New function observePeers() to monitor connections to other Ditto devices\\n* Improved query results performance\\n* Fixed two bugs that could lead to a crash\\n* Many networking improvements to speed up sync on iOS and Android\\n\\nNote: SyncKit 0.2 is incompatible with version 0.1.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.2.0/api-reference/","date_released":"2019-12-17T11:51:23.638Z"},"0.2.1":{"description":"* Fixes a crash that can occur when calling stop().","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.2.1/api-reference/","date_released":"2020-01-09T04:38:59.387Z"},"0.2.2":{"description":"* Faster Bluetooth sync between iOS devices when reopening app from background","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.2.2/api-reference/","date_released":"2020-02-03T00:22:30.307Z"},"0.3.0":{"description":"* DittoKit 0.3 includes incompatible changes to data storage and networking - please uninstall all apps based on DittoKit 0.2 first\\n* The CocoaPod \u201cDittoKit\u201d is now Objective-C. The Swift version is published as \u201cDittoKitSwift\u201d. To continue working with Ditto in Swift, update your Podfile and import statement\\n* Support for attaching large binary files to documents and syncing them on demand\\n* Many SDK functions no longer throw exceptions and the \u201ctry\u201d operator is no longer needed\\n* When creating documents you can no longer specify the id by providing an `_id` key. Instead you must specify an id as an extra argument to the `insert` function, if you want to explicitly set a document\u2019s id\\n* A document\u2019s id property is now `id` rather than `_id`\\n* The parameters for a live query callback have changed\\n* The sort order for a query is now controlled by an ascending/descending enum\\n* Faster sync performance\\n* Ability to connect to a peer at a known address using the Server transport type\\n* You can set your Ditto license key by configuring \u201cDittoAccessLicense\u201d in Info.plist","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.0/api-reference/","date_released":"2020-06-04T10:09:43.663Z"},"0.3.1":{"description":"* Added a new LAN transport mode WiFiFixedPort to listen for connections on a known port.\\n* DittoKit has a new sdkVersion property describing which build of DittoKit is installed. Please include this information in support requests.\\n* Fixed bug where an attachment transfer may not resume after being interrupted.\\n* Fixed bug where a long-lasting Bluetooth connection may spontaneously disconnect and reconnect.\\n* Improvements to reconnection speed.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.1/api-reference/","date_released":"2020-07-16T01:16:25.754Z"},"0.3.2":{"description":"* Fixes a memory leak in the Cocoa SDK when using findByID() to query documents.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.2/api-reference/","date_released":"2020-07-22T01:31:22.954Z"},"0.3.3":{"description":"* Improved LAN background sync for iOS apps","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.3/api-reference/","date_released":"2020-08-04T05:05:57.389Z"},"0.3.4":{"description":"* Fixed a bug with query compilation where integer literals in the query would\\nlead to a query compilation failure.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.4/api-reference/","date_released":"2020-08-10T14:25:51.535Z"},"0.3.5":{"description":"* Fixed an issue where inserting data as default data (setting the `isDefault`\\nparameter to true) could lead to data that would not merge as expected.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.5/api-reference/","date_released":"2020-09-04T19:30:09.440Z"},"0.4.0-alpha1":{"description":"* Note that this is a release with breaking changes, even just in terms of clients running 0.4.0 not being able to communicate with clients running 0.3.X releases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.4.0-alpha1/api-reference/","date_released":"2020-09-29T08:18:47.875Z"}},"DittoKitSwift":{"latest":{"description":"* Note that this is a release with breaking changes, even just in terms of clients running 0.4.0 not being able to communicate with clients running 0.3.X releases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.4.0-alpha1/api-reference/","date_released":"2020-09-29T08:46:26.731Z"},"0.3.1":{"description":"* Added a new LAN transport mode WiFiFixedPort to listen for connections on a known port.\\n* DittoKit has a new sdkVersion property describing which build of DittoKit is installed. Please include this information in support requests.\\n* Fixed bug where an attachment transfer may not resume after being interrupted.\\n* Fixed bug where a long-lasting Bluetooth connection may spontaneously disconnect and reconnect.\\n* Improvements to reconnection speed.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.1/api-reference/","date_released":"2020-07-16T01:27:39.752Z"},"0.3.2":{"description":"* Fixes a memory leak in the Cocoa SDK when using findByID() to query documents.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.2/api-reference/","date_released":"2020-07-22T01:42:59.976Z"},"0.3.3":{"description":"* Improved LAN background sync for iOS apps","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.3/api-reference/","date_released":"2020-08-04T05:15:54.368Z"},"0.3.4":{"description":"* Fixed a bug with query compilation where integer literals in the query would\\nlead to a query compilation failure.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.4/api-reference/","date_released":"2020-08-10T14:31:52.225Z"},"0.3.5":{"description":"* Fixed an issue where inserting data as default data (setting the `isDefault`\\nparameter to true) could lead to data that would not merge as expected.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.5/api-reference/","date_released":"2020-09-04T19:36:44.327Z"},"0.4.0-alpha1":{"description":"* Note that this is a release with breaking changes, even just in terms of clients running 0.4.0 not being able to communicate with clients running 0.3.X releases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.4.0-alpha1/api-reference/","date_released":"2020-09-29T08:46:26.731Z"}},"DittoSyncKit":{"latest":{"description":"* `DITLogger` class added, which allows extra logging functionality through\\n  `setCustomLogCallback` and `setLogFile`/`setLogFileURL`.\\n* `CFBundleShortVersionString` in the framework\'s Info.plist now only contains\\n  alphanumeric characters, which should resolve any issues with submitting apps\\n  to TestFlight or the App Store.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.653Z"},"1.0.0-alpha1":{"description":"* Note that this is a release with breaking changes and clients using releases\\nin the 1.0 series will not be able to communicate with clients running a version\\nthat is anything less than 1.0. This should hopefully not be an issue because\\nthis release of the SDK has changed the name to be DittoSyncKit as opposed to\\nDittoKit.\\n* Lots of performance improvements and some bug fixes.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha1/api-reference/","date_released":"2020-10-09T18:31:20.120Z"},"1.0.0-alpha3":{"description":"* Added new `observeWithNextSignal` API to allow the application to control the\\ndelivery of the next observe callback event.\\n* Fixed several issues related to attachments that could delay sync.\\n* Simplified log statements","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha3/api-reference/","date_released":"2020-11-04T18:53:13.403Z"},"1.0.0-alpha4":{"description":"* Fix issue where attachments could stop being fetched incorrectly.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha4/api-reference/","date_released":"2020-11-10T11:14:57.436Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted.\\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progress.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-22T20:57:11.310Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.147Z"},"1.0.0-alpha7":{"description":"* `DITLogger` class added, which allows extra logging functionality through\\n  `setCustomLogCallback` and `setLogFile`/`setLogFileURL`.\\n* `CFBundleShortVersionString` in the framework\'s Info.plist now only contains\\n  alphanumeric characters, which should resolve any issues with submitting apps\\n  to TestFlight or the App Store.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.653Z"}},"DittoSyncKitSwift":{"latest":{"description":"* `DittoLogger` class added, which allows extra logging functionality through\\n  `setCustomLogCallback` and `setLogFile`/`setLogFileURL`.\\n* `CFBundleShortVersionString` in the framework\'s Info.plist now only contains\\n  alphanumeric characters, which should resolve any issues with submitting apps\\n  to TestFlight or the App Store.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha1":{"description":"* Note that this is a release with breaking changes and clients using releases\\nin the 1.0 series will not be able to communicate with clients running a version\\nthat is anything less than 1.0. This should hopefully not be an issue because\\nthis release of the SDK has changed the name to be DittoSyncKitSwift as opposed\\nto DittoKitSwift.\\n* Lots of performance improvements and some bug fixes.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha1/api-reference/","date_released":"2020-10-09T20:22:39.894Z"},"1.0.0-alpha3":{"description":"* Added new `observeWithNextSignal` API to allow the application to control the\\ndelivery of the next observe callback event.\\n* Fixed several issues related to attachments that could delay sync.\\n* Simplified log statements","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha3/api-reference/","date_released":"2020-11-06T11:50:36.667Z"},"1.0.0-alpha4":{"description":"* Fix issue where attachments could stop being fetched incorrectly.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha4/api-reference/","date_released":"2020-11-10T11:27:15.848Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha5/api-reference/","date_released":"2020-11-22T21:17:53.361Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* `DittoLogger` class added, which allows extra logging functionality through\\n  `setCustomLogCallback` and `setLogFile`/`setLogFileURL`.\\n* `CFBundleShortVersionString` in the framework\'s Info.plist now only contains\\n  alphanumeric characters, which should resolve any issues with submitting apps\\n  to TestFlight or the App Store.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"DittoObjC":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.\\n* Fix a potential crash that would occur if a live query had `stop` called on it\\nimmediately after it was created.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"- Added: property `isReady` to experimental `DITBusStream` to check if a message may be enqueued.\\n- Added: method `setOfflineOnlyLicenseToken:error:` to class `DITDitto` as replacement for now deprecated `setLicenseToken:error:`.\\n- Deprecated: method `setLicenseToken:error:` of class `DITDitto`, please use newly added `setOfflineOnlyLicenseToken:error:` instead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.128Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `findByID` or `insert` calls you now need to provide\\n    a `DITDocumentID` object rather than a string. Similarly, when you access a\\n    document\'s ID it will now return a `DITDocumentID` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `startSync()` and `stopSync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `setTransportConfig` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `startSync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DITDocumentID`s in order to get nested values\\nwhen a document ID is based on an array or a dictionary.\\n* Deprecated `.toNative()` on `DITDocumentID`. You should use `.value`\\ninstead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Bluetooth sync performance improvements with L2CAP support added.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Fix issue with AWDL transport where it could end up in a stuck state.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```objc\\n  DITLiveQuery *liveQuery = [[collection findAll] observe:^(NSArray<DITDocument *> *docs, DITLiveQueryEvent *event)\\n      [event hash:docs]; // e.g. `1950015808188223905`\\n      [event hashMnemonic:docs]; // e.g. `locate-quality-tina--helena-remote-cat`\\n      // ...\\n  }];\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `setAccessLicense` and added a new function, `setLicenseToken`,\\n  which will set an error out param if your provided license token is expired\\n  or invalid somehow.\\n* Deprecated `startSync` and added a new function, `tryStartSync`, which will\\n  set an error out param if your `Ditto` instance hasn\'t yet been activated via\\n  a successful call to `setLicenseToken`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DITDocumentPath`, `DITMutableDocumentPath`, and\\n`DITDocumentIDPath` types to allow accessing a nested value in a document/ID as\\nan `id`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.808Z"},"1.0.7":{"description":"* Fix bug where sync may fail if an unusually long `deviceName` is configured\\n* Fix intermittent crash when Bluetooth L2CAP connections fail\\n* Fix intermittent crash when using the presence viewer component and the app is backgrounded","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added a `DITAuthenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added a `DITAuthenticationDelegate` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix for incorrectly included header.\\n* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Fixed AWDL peers never re-connecting after transport is toggled.\\n- Fixed mDNS transport crash.\\n- Fixed sporadic hangs and crashes when using Online identity.\\n- Added `DITWriteStrategy` enum.\\n- Added methods `-[Collection insert:writeStrategy:error]` and `-[Collection insert:withID:writeStrategy:error]`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added `isAuthenticated` and `userID` methods to `DITAuthenticator`.\\n- Deprecated `-[Collection insert:isDefault:error]` and `-[Collection insert:withID:isDefault:error]` in favor of write strategy variants.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.920Z"},"1.0.13":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.910Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.\\n* Fix a bug where some transports related calls were not being run on the\\n  correct thread and so could lead to a crash.\\n* Add an extra initializer for `OnlinePlayground` identities: `initOnlinePlaygroundWithAppID:(NSString *)appID enableDittoCloudSync:(BOOL)enableDittoCloudSync`","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.765Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.917Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.\\n* macOS (including Apple Silicon) and iOS simulator (on an Apple Silicon device)\\n  support has been added.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.987Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.\\n* Fix an issue where memory usage could grow very quickly when using a live\\n  query and performing lots of operations that led to a live query update.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.955Z"},"1.0.18":{"description":"* Fixed some small memory leaks.\\n* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.709Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `isSyncActive` to class `Ditto`.\\n- Added: methods `logout` and `logout:` to class `DITAuthenticator`.\\n- Added: set of APIs to observe authentication status, see (see API reference for `DITAuthenticator` and `DITAuthenticationDelegate`).\\n- Added: method `upsert:` & friends to classes `DITCollection` and `DITScopedWriteTransaction` (as a replacement for `insert:` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Deprecated: properties `isAuthenticated` and `userID` of class `DITAuthenticator` in favor of newly introduced property `status`.\\n- Deprecated: methods `insert:` & frinds of classes `DITCollection` and `DITScopedWriteTransaction` in favor of newly introduced `upsert:` & friends.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.092Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Experimental Bus API\\n  - Changed: `DITBus.delegate` property is now weak\\n  - Added: `-sendSingleUnreliableMessage:toAddress:completion:` method to `DITBus` class\\n  - Added: `-sendSingleReliableMessage:toAddress:completion:` method to `DITBus` class\\n  - Added: `-openStreamToAddress:reliability:completion:` method to `DITBus` class\\n  - Added: `-ditBus:didReceiveSingleMessage:` method to `DITBusDelegate` protocol\\n  - Added: `-ditBus:didReceiveIncomingStream:fromPeer:` method to `DITBusDelegate` protocol\\n  - Removed: `-ditBus:didReceiveMessage:` method from `DITBusDelegate` protocol\\n  - Added: `DITBusStream` class\\n  - Added: `DITBusStreamDelegate` protocol\\n- Added: Experimental mesh roles API\\n  - Added: `-setMeshRole(meshRole:ditto:)` method to `DITExperimental` class\\n  - Added: `-setPriorityForMeshRole(_:forMeshRole:ditto:)` to `DITExperimental` class\\n- Fixed: Improved AWDL reliability on iOS 12","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.843Z"},"1.1.2":{"description":"- Added: property `isReady` to experimental `DITBusStream` to check if a message may be enqueued.\\n- Added: method `setOfflineOnlyLicenseToken:error:` to class `DITDitto` as replacement for now deprecated `setLicenseToken:error:`.\\n- Deprecated: method `setLicenseToken:error:` of class `DITDitto`, please use newly added `setOfflineOnlyLicenseToken:error:` instead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.128Z"}},"DittoSwift":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.\\n* Fix a potential crash that would occur if a live query had `stop` called on it\\nimmediately after it was created.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"- Added: property `isReady` to experimental `DittoBusStream` to check if a message may be enqueued.\\n- Added: method `setOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `setLicenseToken()`.\\n- Changed: made `DittoBusStream`, `DittoRemotePeerV2`, and `DittoAddress` adopt `Equatable` and `Hashable` protocols.\\n- Changed: made `DittoRemotePeerV2` adopt the `Identifiable` protocol.\\n- Deprecated: method `setLicenseToken()` of class `Ditto`, please use newly added `setOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.128Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `findByID` or `insert` calls you now need to provide\\n    a `DittoDocumentID` object rather than a string. Similarly, when you access\\n    a document\'s ID it will now return a `DittoDocumentID` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `startSync()` and `stopSync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `setTransportConfig` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `startSync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DittoDocumentID`s in order to get nested values\\nwhen a document ID is based on an array or a dictionary.\\n* Deprecated `.toNative()` on `DittoDocumentID`. You should use `.value`\\ninstead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Bluetooth sync performance improvements with L2CAP support added.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Fix issue with AWDL transport where it could end up in a stuck state.\\n* Deprecate the `find(query:)` function on `DittoScopedWriteTransaction` and add\\n  a new version of `find(:)` that doesn\'t require the `query` argument label.\\n  This makes this consistent with the `find(:)` function on `DittoCollection`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```swift\\n  let liveQuery = collection.findAll().observe() { docs, event in\\n      event.hash(docs); // e.g. `1950015808188223905`\\n      event.hashMnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n      // ...\\n  }\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `setAccessLicense` and added a new function, `setLicenseToken`,\\n  which will throw an appropriate error if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `startSync` and added a new function, `tryStartSync`, which will\\n  throw an error if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `setLicenseToken`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DittoDocumentPath`, `DittoMutableDocumentPath`, and\\n`DittoDocumentIDPath` types to allow accessing a nested value in a document/ID\\nas an `Any?`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Fix bug where sync may fail if an unusually long `deviceName` is configured\\n* Fix intermittent crash when Bluetooth L2CAP connections fail\\n* Fix intermittent crash when using the presence viewer component and the app is backgrounded","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added a `DittoAuthenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added an `DittoAuthenticationDelegate` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Added `DittoWriteStrategy` enum.\\n- Added method `insertWithStrategy()` to `DittoCollection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Fixed AWDL peers never re-connecting after transport is toggled.\\n- Fixed mDNS transport crash.\\n- Fixed sporadic hangs and crashes when using Online identity.\\n- Added `isAuthenticated()` method and `userID` property to `DittoAuthenticator`.\\n- Fixed Codable support for non-string IDs and `Float` and `Double` types.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".\\n- Fixed Xcode warning regarding .swiftsourceinfo files being present.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `online` identity in favor of the new `onlineWithAuthentication`\\n  identity.\\n* Deprecate the `development` identity in favor of the new `offlinePlayground`\\n  identity.\\n* Add an `auth` property to `Ditto` that provides access to a\\n  `DittoAuthenticator` when using an appropriate identity with your `Ditto`\\n  instance.\\n* Add support for using a document ID that is an object that conforms to\\n  `Codable`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Fix a bug where large integers (greater than `Int.max`) would mistakenly try\\n  to get internally represented by an `Int`. They are now correctly represented\\n  using a `UInt` instead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.\\n* Fixed handling of large integers in documents. Integers larger than `Int.max`\\n  were still trying to be handled as `Int`s, leading to crashes. We now\\n  correctly handle them as `UInt`s when appropriate.\\n* Add the ability to directly set values inside the closure passed to an\\n  `update` call with assignments done via `=` sets, e.g.\\n  `collection.findByID(\\"123\\").update { $0![\\"color\\"] = \\"white\\" }`\\n* Fix a bug where some transports related calls were not being run on the\\n  correct thread and so could lead to a crash.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.765Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.\\n* Fix a bug with `Codable`-conforming enums that was causing a runtime error.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.917Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.\\n* macOS (including Apple Silicon) and iOS simulator (on an Apple Silicon device)\\n  support has been added.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.987Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.\\n* Fix an issue where memory usage could grow very quickly when using a live\\n  query and performing lots of operations that led to a live query update.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.955Z"},"1.0.18":{"description":"* Fixed a number of `Codable`-related bugs. One of the more notable fixes\\n  involves `Codable`-conforming types from `Foundation` now working as you\'d\\n  expect.\\n* Fixed some small memory leaks.\\n* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.710Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `isSyncActive` to class `Ditto`.\\n- Added: method `logout()` to class `DittoAuthenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `DittoAuthenticator` and `DittoAuthenticationDelegate`).\\n- Added: method `upsert()` to classes `DittoCollection` and `DittoScopedWriteTransaction` (as a replacement for `insert()` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Deprecated: properties `isAuthenticated` and `userID` of class `DittoAuthenticator` in favor of newly introduced property `status`.\\n- Deprecated: methods `insert()` & frinds of classes `DittoCollection` and `DittoScopedWriteTransaction` in favor of newly introduced `upsert()`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.092Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Combine publisher APIs obviating the CombineDitto extension library\\n  - Added: `remotePeersPublisher()` method to `Ditto` class\\n  - Added: `fetchAttachmentPublisher(attachmentToken:)` method to `DittoCollection` class\\n  - Added: `liveQueryPublisher()` method to `DittoPendingCursorOperation` class\\n  - Added: `singleDocumentLiveQueryPublisher()` method to `DittoPendingIDSpecificOperation` class\\n- Added: Experimental Bus API\\n  - Added: `dittoBus(_, didReceiveSingleMessage:)` method to `DittoBusDelegate` protocol\\n  - Added: `dittoBus(_, didReceiveIncomingStream:, fromPeer:)` method to `DittoBusDelegate` protocol\\n  - Removed: `dittoBus(_, didReceive:)` method from `DittoBusDelegate protocol\\n- Added: Experimental mesh roles API\\n  - Added: `setMeshRole(meshRole:, ditto:)` method to `DittoExperimental` class\\n  - Added: `setPriorityForMeshRole(_, forMeshRole:, ditto:)` to `DittoExperimental` class\\n- Fixed: Improved AWDL reliability on iOS 12","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.843Z"},"1.1.2":{"description":"- Added: property `isReady` to experimental `DittoBusStream` to check if a message may be enqueued.\\n- Added: method `setOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `setLicenseToken()`.\\n- Changed: made `DittoBusStream`, `DittoRemotePeerV2`, and `DittoAddress` adopt `Equatable` and `Hashable` protocols.\\n- Changed: made `DittoRemotePeerV2` adopt the `Identifiable` protocol.\\n- Deprecated: method `setLicenseToken()` of class `Ditto`, please use newly added `setOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.128Z"}}},"android":{"DittoKit":{"latest":{"description":"* Fixed an issue where extensive writes can cause a session time-out","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha6/api-reference/","date_released":"2020-09-25T03:16:16.530Z"},"0.1.3":{"description":"* Improved handling of retrieving numeric fields from documents\\n* Fixes a bug where observe would not create a subscription","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.1.3/api-reference/","date_released":"2019-10-08T12:37:33.490Z"},"0.2.0":{"description":"* Improved query results performance\\n* Fixed two bugs that could lead to a crash\\n* Many networking improvements to speed up sync on iOS and Android\\n\\nNote: SyncKit 0.2 is incompatible with version 0.1.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.2.0/api-reference/","date_released":"2019-12-17T16:49:51.462Z"},"0.2.1":{"description":"* Fixes a crash that can occur when calling stop().","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.2.1/api-reference/","date_released":"2020-01-09T06:28:10.519Z"},"0.2.2":{"description":"* Reduced minimum Android SDK API level from 26 to 25 to support Android 7.1 devices.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.2.2/api-reference/","date_released":"2020-02-14T00:11:12.911Z"},"0.2.3":{"description":"* Fixed an issue where DittoKit would not work in 32-bit contexts.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.2.3/api-reference/","date_released":"2020-05-05T09:42:14.418Z"},"0.3.0":{"description":"* DittoKit 0.3 includes incompatible changes to data storage and networking - please uninstall all apps based on DittoKit 0.2 first\\n* Support for attaching large binary files to documents and syncing them on demand\\n* When creating documents you can no longer specify the id by providing an `_id` key. Instead you must specify an id as an extra argument to the `insert` function, if you want to explicitly set a document\u2019s id\\n* A document\u2019s id property is now `id` rather than `_id`\\n* The parameters for a live query callback have changed\\n* The sort order for a query is now controlled by an ascending/descending enum\\n* Fixed crash when inserting large amounts of data into a document\\n* Faster sync performance\\n* Ability to connect to a peer at a known address using the Server transport type","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.0/api-reference/","date_released":"2020-06-04T10:39:58.291Z"},"0.3.1":{"description":"* Added a new LAN transport mode WiFiFixedPort to listen for connections on a known port.\\n* Android phones using the Bluetooth transport will no longer change their device name.\\n* DittoKit has a new sdkVersion property describing which build of DittoKit is installed. Please include this information in support requests.\\n* Fixed bug where an attachment transfer may not resume after being interrupted.\\n* Fixed bug where a long-lasting Bluetooth connection may spontaneously disconnect and reconnect.\\n* Improvements to reconnection speed.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.1/api-reference/","date_released":"2020-07-16T01:36:06.187Z"},"0.3.2":{"description":"* Fixes bug where Android phones sometimes do not activate Bluetooth if it is enabled after launching the app","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.2/api-reference/","date_released":"2020-07-30T05:32:14.485Z"},"0.3.3":{"description":"* Android-specific performance improvements for large collections\\n* Java: DittoDocument\'s \\"value\\" field has been replaced with \\"getValue()\\"","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.3/api-reference/","date_released":"2020-08-07T03:31:47.579Z"},"0.3.4":{"description":"* Fixed a bug with query compilation where integer literals in the query would\\nlead to a query compilation failure.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.4/api-reference/","date_released":"2020-08-10T15:13:36.013Z"},"0.3.5":{"description":"* Fixed an issue where inserting data as default data (setting the `isDefault`\\nparameter to true) could lead to data that would not merge as expected.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.5/api-reference/","date_released":"2020-09-04T20:04:42.643Z"},"0.4.0-alpha1":{"description":"* Note that this is a release with breaking changes, even just in terms of\\nclients running 0.4.0 not being able to communicate with clients running 0.3.X\\nreleases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha1/api-reference/","date_released":"2020-09-09T21:42:09.729Z"},"0.4.0-alpha2":{"description":"From the 0.4.0-alpha1 release notes:\\n\\n* Note that this is a release with breaking changes, even just in terms of\\nclients running 0.4.0 not being able to communicate with clients running 0.3.X\\nreleases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha2/api-reference/","date_released":"2020-09-10T08:16:25.426Z"},"0.4.0-alpha3":{"description":"* Fixed an error where presence data was failing to be deserialized properly.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha3/api-reference/","date_released":"2020-09-11T09:34:06.493Z"},"0.4.0-alpha4":{"description":"* Fixes an issue where deletes might not propagate correctly in a multi-hop mesh","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha4/api-reference/","date_released":"2020-09-18T02:12:36.268Z"},"0.4.0-alpha5":{"description":"* Fixed finalizer logic with the following types:\\n    * `DittoAttachment`\\n    * `DittoAttachmentFetcher`\\n    * `DittoKit`\\n    * `DittoLiveQuery`\\n    * `DittoSubscription`","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha5/api-reference/","date_released":"2020-09-23T21:10:11.700Z"},"0.4.0-alpha6":{"description":"* Fixed an issue where extensive writes can cause a session time-out","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha6/api-reference/","date_released":"2020-09-25T03:16:16.530Z"}},"DittoSyncKit":{"latest":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha1":{"description":"* Note that this is a release with breaking changes and clients using releases\\nin the 1.0 series will not be able to communicate with clients running a version\\nthat is anything less than 1.0. This should hopefully not be an issue because\\nthis release of the SDK has changed the name to be DittoSyncKit as opposed to\\nDittoKit.\\n* Lots of performance improvements and some bug fixes.","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha1/api-reference/","date_released":"2020-10-08T21:23:54.081Z"},"1.0.0-alpha2":{"description":"* Decreases the file size of the AAR","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha2/api-reference/","date_released":"2020-10-09T21:04:09.999Z"},"1.0.0-alpha3":{"description":"* Added new observeWithNextSignal API to allow the application to control the delivery of the next observe callback ev\\nent.\\n* Fixed several issues related to attachments that could delay sync.\\n* Simplified log statements","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha3/api-reference/","date_released":"2020-11-04T07:46:13.521Z"},"1.0.0-alpha4":{"description":"* Fix issue where attachments could stop being fetched incorrectly.","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha4/api-reference/","date_released":"2020-11-09T18:15:59.228Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-23T04:43:47.655Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"Ditto":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"- Added: method `setOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `setLicenseToken()`.\\n- Deprecated: method `setLicenseToken()` of class `Ditto`, please use newly added `setOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.129Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `findByID` or `insert` calls you now need to provide\\n    a `DittoDocumentID` object rather than a string. Similarly, when you access\\n    a document\'s ID it will now return a `DittoDocumentID` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `startSync()` and `stopSync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `setTransportConfig` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `startSync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DittoDocumentID`s in order to get nested values\\nwhen a document ID is based on an array or a map.\\n* Deprecated `.toNative()` on `DittoDocumentID`. You should use `.value`\\ninstead.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Bluetooth sync performance improvements.\\n* Enable configuration of advertisement power and frequency.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Bluetooth sync performance improvements with L2CAP support added, which will\\n  be used when available.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```kotlin\\n  val liveQuery = collection.findAll().observe() { docs, event ->\\n      event.hash(docs); // e.g. `1950015808188223905`\\n      event.hashMnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n      // ...\\n  }\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `setAccessLicense` and added a new function, `setLicenseToken`,\\n  which will throw an appropriate error if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `startSync` and added a new function, `tryStartSync`, which will\\n  throw an error if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `setLicenseToken`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DittoDocumentPath`, `DittoMutableDocumentPath`, and\\n`DittoDocumentIDPath` types to allow accessing a nested value in a document/ID\\nas an `Any?`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Fix bug where sync may fail if an unusually long `deviceName` is configured","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added a `DittoAuthenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added a `DittoAuthenticationCallback` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Added `DittoWriteStrategy` enum.\\n- Added method `insertWithStrategy()` to `DittoCollection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added `isAuthenticated` method and `userID` property to `DittoAuthenticator`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"- Changed `DittoIdentity`\'s property `appID` to be of type `String` instead of `UUID`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.\\n* Make outgoing BLE connections and MTU customisable.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.\\n* Add versions of `loginWithToken` and `loginWithCredentials` that can be used\\n  with Java that don\'t require returning `null` at the end of the lambda.\\n* Remove the empty default implementations of `authenticationRequired` and\\n  `authenticationExpiringSoon` on `DittoAuthenticationCallback`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.917Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.987Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.955Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).\\n- Fixed: crash when calling `tryStartSync()` due to new Bluetooth rules and permissions in Android 12.\\n- Fixed: \\"Receiver not registered\\" exception occuring due to a race condition in Bluetooth registration.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.710Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `isSyncActive` to class `Ditto`.\\n- Added: method `logout()` to class `DittoAuthenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `DittoAuthenticator` and `DittoAuthenticationCallback`).\\n- Added: method `upsert()` to classes `DittoCollection` and `DittoScopedWriteTransaction` (as a replacement for `insert()` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Deprecated: properties `isAuthenticated` and `userId` of class `DittoAuthenticator` in favor of newly introduced property `status`.\\n- Deprecated: methods `insert()` & frinds of classes `DittoCollection` and `DittoScopedWriteTransaction` in favor of newly introduced `upsert()`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.093Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Experimental mesh roles API\\n  - Added: `DittoExperimental` class\\n  - Added: `setMeshRole()` method to `DittoExperimental` class\\n  - Added: `setPriorityForMeshRole()` method to `DittoExperimental` class","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.843Z"},"1.1.2":{"description":"- Added: method `setOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `setLicenseToken()`.\\n- Deprecated: method `setLicenseToken()` of class `Ditto`, please use newly added `setOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.129Z"}}},"cpp-ios":{"DittoKit":{"latest":{"description":"* Initial release of the SDK","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoKit/0.1.0/api-reference/","date_released":"2019-12-05T16:36:03.940Z"},"0.1.0":{"description":"* Initial release of the SDK","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoKit/0.1.0/api-reference/","date_released":"2019-12-05T16:36:03.940Z"}},"DittoSyncKit":{"latest":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-23T21:22:41.601Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.\\n* Fixed a bug where documents containing attachments syncing to an instance of\\n  the C++ SDK could lead to a crash.\\n* Upgrade nlohmann json header from 3.7.0 to 3.9.1.\\n* Added `set_custom_log_cb` and `set_log_file` method calls to `Log` class to\\n  allow provision of a custom logging callback function, and a file path\\n  that logs should be directed to.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"Ditto":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"* Added a Linux x86_64 version of the C++ to the group of published C++ SDKs.\\n* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `find_by_id` or `insert` calls you now need to\\n    provide a `DocumentId` object rather than a string. Similarly, when you\\n    access a document\'s ID it will now return a `DocumentId` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `start_sync()` and `stop_sync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `set_transport_config` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `start_sync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DocumentId`s in order to get nested values when\\na document ID is based on an array or a map.\\n* Deprecated `.to_native()` on `DocumentId`. You should use `.value()` instead.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```cpp\\n  auto live_query = collection.find_all().observe(LiveQueryEventHandler{\\n        [&](std::vector<Document> docs, LiveQueryEvent event) {\\n            event.hash(docs); // e.g. `1950015808188223905`\\n            event.hash_mnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n            // ...\\n      });\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `set_access_license` and added a new function, `set_license_token`,\\n  which will throw an appropriate exception if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `start_sync` and added a new function, `try_start_sync`, which will\\n  throw an exception if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `set_license_token`.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DocumentPath`, `MutableDocumentPath`, and\\n`DocumentIdPath` types to allow accessing a nested value in a document/ID as a\\n`nlohmann::json`.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Improve SDK API documentation extensively\\n* Fix crash that can occur if a Ditto `Identity` is passed by value\\n* Fix bug where sync may fail if an unusually long `deviceName` is configured","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Added a Linux x86_64 version of the C++ to the group of published C++ SDKs.\\n* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"}}},"dotnet":{"DittoSharp":{"latest":{"description":"* Fixed an issue where extensive writes can cause a session time-out","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha5/api-reference/","date_released":"2020-09-25T04:21:37.749Z"},"0.1.0-alpha3":{"description":"* Sorted out the packaging so that installing the SDK doesn\'t require any extra\\n  actions after installation.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.1.0-alpha3/api-reference/","date_released":"2020-06-29T21:04:19.973Z"},"0.1.0-alpha4":{"description":"* Added the licenses of the dependencies used by the SDK to the NuGet package","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.1.0-alpha4/api-reference/","date_released":"2020-06-30T09:37:48.340Z"},"0.1.1-alpha1":{"description":"Compatibility update.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.1.1-alpha1/api-reference/","date_released":"2020-07-18T15:38:20.478Z"},"0.1.1-alpha2":{"description":"Further compatibility updates.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.1.1-alpha2/api-reference/","date_released":"2020-07-20T08:48:07.767Z"},"0.3.1-alpha1":{"description":"Compatibility update for 0.3.1 releases.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.3.1-alpha1/api-reference/","date_released":"2020-07-20T21:11:27.277Z"},"0.3.4-alpha1":{"description":"* Fixed a bug with query compilation where integer literals in the query would\\nlead to a query compilation failure.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.3.4-alpha1/api-reference/","date_released":"2020-08-11T07:45:19.205Z"},"0.3.5-alpha1":{"description":"* Fixed an issue where inserting data as default data (setting the `isDefault`\\nparameter to true) could lead to data that would not merge as expected.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.3.5-alpha1/api-reference/","date_released":"2020-09-04T20:25:28.669Z"},"0.4.0-alpha1":{"description":"* Note that this is a release with breaking changes, even just in terms of\\nclients running 0.4.0 not being able to communicate with clients running 0.3.X\\nreleases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha1/api-reference/","date_released":"2020-09-09T21:18:55.927Z"},"0.4.0-alpha2":{"description":"* Fix a potential crash when working with attachments.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha2/api-reference/","date_released":"2020-09-11T09:25:30.221Z"},"0.4.0-alpha3":{"description":"* Fix disposal/clean-up of `DittoAttachmentFetcher` objects.\\n* Add support for Linux 64-bit platforms.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha3/api-reference/","date_released":"2020-09-16T23:24:20.678Z"},"0.4.0-alpha4":{"description":"* Fixes an issue where deletes might not propagate correctly in a multi-hop mesh","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha4/api-reference/","date_released":"2020-09-18T01:01:44.857Z"},"0.4.0-alpha5":{"description":"* Fixed an issue where extensive writes can cause a session time-out","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha5/api-reference/","date_released":"2020-09-25T04:21:37.749Z"}},"DittoSyncKit":{"latest":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha1":{"description":"* Note that this is a release with breaking changes and clients using releases\\nin the 1.0 series will not be able to communicate with clients running a version\\nthat is anything less than 1.0. This should hopefully not be an issue because\\nthis release of the SDK has changed the name to be DittoSyncKit as opposed to\\nDittoSharp and the namespace has gone from DittoSharp to Ditto.SyncKit.\\n* Lots of performance improvements and some bug fixes.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha1/api-reference/","date_released":"2020-10-09T17:53:42.857Z"},"1.0.0-alpha2":{"description":"Fixed several potential issues with attachment fetching that may result in the fetch callback not firing.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha2/api-reference/","date_released":"2020-10-14T18:01:39.315Z"},"1.0.0-alpha3":{"description":"* Added new observeWithNextSignal API to allow the application to control the delivery of the next observe callback ev\\nent.\\n* Fixed several issues related to attachments that could delay sync.\\n* Simplified log statements","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha3/api-reference/","date_released":"2020-11-04T08:48:18.691Z"},"1.0.0-alpha4":{"description":"* Fix issue where attachments could stop being fetched incorrectly.\\n* Introduce a `DittoLogger` class with various log-related functionality to make\\n  logging easier and more feature-rich.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha4/api-reference/","date_released":"2020-11-09T18:02:18.392Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-23T20:30:04.206Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"Ditto":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"- Added: method `SetOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `SetLicenseToken()`.\\n- Deprecated: `SetLicenseToken()` of class `Ditto`, please use newly added `SetOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.129Z"},"1.0.0-alpha9":{"description":"* The exact version of the Ditto SDK can now be retrieved using the `ditto.SDKVersion` property.\\n* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `FindByID` or `insert` calls you now need to provide\\n    a `DittoDocumentID` object rather than a string. Similarly, when you access\\n    a document\'s ID it will now return a `DittoDocumentID` object instead of a\\n    string.\\n  * The `Start()` and `Stop()` functions on the `Ditto` object have been renamed\\n    to `StartSync()` and `StopSync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `SetTransportConfig` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `Start()` call to `StartSync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DITDocumentID`s in order to get nested values\\nwhen a document ID is based on an array or a dictionary.\\n* Deprecated `.ToNative()` on `DittoDocumentID`. You should use `.Value`\\ninstead.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```dotnet\\n  var liveQuery = collection.FindAll().Observe((docs, event) =>\\n  {\\n      event.Hash(docs); // e.g. `1950015808188223905`\\n      event.HashMnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n      // ...\\n  });\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `SetAccessLicense` and added a new function, `SetLicenseToken`,\\n  which will throw an appropriate exception if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `StartSync` and added a new function, `TryStartSync`, which will\\n  throw an exception if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `SetLicenseToken`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `Value` accessor on `DittoDocumentPath`, `DittoMutableDocumentPath`, and\\n`DittoDocumentIDPath` types to allow accessing a nested value in a document/ID\\nas an `object`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Fix bug where sync may fail if an unusually long `deviceName` is configured","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Fixed an issue where `Ditto.dll` would fail to be loaded.\\n* Updated the `SharedKey` identity to allow a custom working directory to be provided.\\n* Fixed `default` construction of `DittoIdentity` in `new Ditto()`.\\n* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `Exec/Observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added a `DittoAuthenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added a `DittoAuthenticationDelegate` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Fixed `Update` call when chained to a `FindByID` call where no document with the provided ID exists.\\n- Added `WriteStrategy` enum.\\n- Added method `InsertWithStrategy()` to `DittoCollection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added `IsAuthenticated()` method and `UserId` property to `DittoAuthenticator`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"- Changed `DittoIdentity`\'s `appID` construction parameter to be of type `string` instead of `Guid`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.\\n* Deprecate the `Authenticator` property on `Ditto` in favor of an `Auth`\\n  property.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.917Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.987Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.955Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.711Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `IsSyncActive` to class `Ditto`.\\n- Added: method `Logout()` to class `DittoAuthenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `DittoAuthenticator` and `DittoAuthenticationDelegate`).\\n- Added: method `Upsert()` to classes `DittoCollection` and `DittoScopedWriteTransaction` (as a replacement for `Insert()` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Added: property `DeviceName` to class `Ditto`.\\n- Deprecated: properties `IsAuthenticated` and `UserID` of class `DittoAuthenticator` in favor of newly introduced property `Status`.\\n- Deprecated: methods `Insert()` & frinds of classes `DittoCollection` and `DittoScopedWriteTransaction` in favor of newly introduced `Upsert()`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.093Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Experimental mesh roles API\\n  - Added: `SetMeshRole()` method to `DittoExperimental` class\\n  - Added: `SetPriorityForMeshRole()` to `DittoExperimental` class","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.843Z"},"1.1.2":{"description":"- Added: method `SetOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `SetLicenseToken()`.\\n- Deprecated: `SetLicenseToken()` of class `Ditto`, please use newly added `SetOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.129Z"}}},"js":{"Ditto":{"1.0.8":{"description":"* Initial public *Beta* release of the JS SDK with the following constraints:\\n  * Web only for now. Node & Electron support will follow shortly.\\n  * Counters work only partially. Full support is in development.\\n  * No support for batch operations yet.\\n  * No support for attachments yet.\\n\\n* Known bugs and issues:\\n  * `runGarbageCollection()` doesn\'t work and throws an exception.\\n  * `observeWithNextSignal()` & `observeLocalWithNextSignal()` do not work and\\n    throw an exception.\\n  * Longer running queries might block the JS event loop.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"latest":{"description":"- Added: method `setOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `setLicenseToken()`.\\n- Deprecated: method `setLicenseToken()` of class `Ditto`, please use newly added `setOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.129Z"},"1.0.9":{"description":"* Added support for attachments.\\n* When calling `insert` you should no longer nest the document\'s content under the `value` key. Instead the object that you provide to `insert` will directly be used to form the contents of the document.\\n* Similarly, when using `observe` or `exec` functionality you will no longer have a `Document` type returned to you and instead will have a `DocumentLike` object, which represents the document\'s contents, returned to you. You can directly subscript this object to get values at the specified key path of the document.\\n* Enabled support for loading `ditto.wasm` from Ditto\'s CDN.\\n* Allow passing a \\"raw\\" primitive type, instead of requiring a `DocumentID`, to the `insert` and `findByID` functions.\\n* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added an `Authenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added an `AuthenticationHandler` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Fixed exception when creating a `Ditto` instance without providing a `path`.\\n- Added `WriteStrategy` type.\\n- Added option `writeStrategy` to method `insert()` of `Collection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added Node support for macOS/x86_64, Linux/x86_64 and Linux/ARMhf. Support for more OS/arch combinations will follow.\\n- Added method `value()` to `DocumentPath` and `MutableDocumentPath` allowing to access the value at the key-path represented by the receiver.\\n- Added static method `valueAt()` and corresponding (convenience) instance method `_valueAt()` to `Document` and `MutableDocument` allowing to access the value at a given key-path.\\n- Added static method `replaceWithCounterAt()` and corresponding (convenience) instance method `_replaceWithCounterAt()` to `MutableDocument` allowing to turn a property at a given key-path into a counter.\\n- Added static method `incrementCounterAt()` and corresponding (convenience) instance method `_incrementCounterAt()` to `MutableDocument` allowing to increment a counter property at a given key-path.\\n- Added `isAuthenticated()` method and `userID` property to `Authenticator`.\\n- Changed `at()` method of `DocumentPath` and `MutableDocumentPath` to also take a number (index).\\n- Changed `MutableDocument` proxy to return `undefined` for non-existing paths.\\n- Changed property `siteID` of relevant `Identity` variants to be optional and allow `0` to be passed.\\n- Deprecated `appName` in favor of `appID` for identities of type `development` and `sharedKey`.\\n- Deprecated `atIndex()` method of `DocumentPath` and `MutableDocumentPath` in favor of `at()`.\\n- Deprecated option `isDefault` for method `insert()` of `Collection` in favor of `writeStrategy`.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".\\n- Fixed issues with key-paths containing dashes.\\n- Fixed issues with key-paths containing multiple subscript operators.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"- Fixed serialization errors during authentication when running in the browser.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.\\n* Add validation of all queries specified as part of `find()` calls.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.886Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.\\n* Fix a potential deadlock in relation to logging.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.598Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.\\n* Expose `CollectionsEvent` as part of the public API.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.\\n* Removed the `DocumentID` type and replaced it with `DocumentIDValue`.\\n* Fixed the `sort(...)` functionality not having an effect for live queries.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.918Z"},"1.0.18-alpha1":{"description":"* Fixed a bug where Ditto Cloud sync was not enabled by default for\\n  `Online`-based identities.\\n* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.988Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.956Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).\\n- Fixed: missing canonicalization step for IDs of inserted documents leading to multiple instances of documents with the \\"same\\" ID being stored in the DB.\\n\\n**IMPORTANT**: This fix only applies to newly inserted documents, documents inserted with an older version of the JavaScript SDK may still have multiple instances in the DB and replicated to other peers. We\'ll provide a proper migration for these in follow-up releases.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.711Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `isSyncActive` to class `Ditto`.\\n- Added: method `logout()` to class `Authenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `Authenticator` and `AuthenticationHandler`).\\n- Added: method `upsert()` to class `Authenticator` (as a replacement for `insert()`) which by default merges the newly inserted document if one with the same ID already exists.\\n- Fixed: crashes when many insertions or removals were in flight (only WebAssembly were affected, i.e. when running in the browser).\\n- Fixed: high memory consumption and main thread blocking in certain edge cases.\\n- Fixed: type signature and API documentation for methods `loginWithToken()` and `loginWithCredentials()` of class `Authenticator`, where the second parameter should be `portal` instead of options. (The actual implementation itself was correct.)\\n- Deprecated: property `isSyncEnabled` of class `Ditto` in favor of the newly introduced `isSyncActive`.\\n- Deprecated: properties `isAuthenticated` and `userID` of class `Authenticator` in favor of newly introduced property `status`.\\n- Deprecated: method `insert()` in favor of newly introduced `upsert()`.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.095Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Changed: Make `identity` optional for `Ditto` constructor\\n- Added: `toJSON()` to `Document` and `MutableDocument`\\n- Added: Support for observing transport condition of websocket connections\\n- Fixed: Node process from exiting prematurely\\n- Fixed: Obscure exception if `appID` is not given for certain identities","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.845Z"},"1.1.2":{"description":"- Added: method `setOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `setLicenseToken()`.\\n- Deprecated: method `setLicenseToken()` of class `Ditto`, please use newly added `setOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.129Z"}}},"cpp":{"DittoKit":{"latest":{"description":"* Initial release of the SDK","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoKit/0.1.0/api-reference/","date_released":"2019-12-05T16:36:03.940Z"},"0.1.0":{"description":"* Initial release of the SDK","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoKit/0.1.0/api-reference/","date_released":"2019-12-05T16:36:03.940Z"}},"DittoSyncKit":{"latest":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-23T21:22:41.601Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.\\n* Fixed a bug where documents containing attachments syncing to an instance of\\n  the C++ SDK could lead to a crash.\\n* Upgrade nlohmann json header from 3.7.0 to 3.9.1.\\n* Added `set_custom_log_cb` and `set_log_file` method calls to `Log` class to\\n  allow provision of a custom logging callback function, and a file path\\n  that logs should be directed to.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"Ditto":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `find_by_id` or `insert` calls you now need to\\n    provide a `DocumentId` object rather than a string. Similarly, when you\\n    access a document\'s ID it will now return a `DocumentId` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `start_sync()` and `stop_sync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `set_transport_config` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `start_sync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DocumentId`s in order to get nested values when\\na document ID is based on an array or a map.\\n* Deprecated `.to_native()` on `DocumentId`. You should use `.value()` instead.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```cpp\\n  auto live_query = collection.find_all().observe(LiveQueryEventHandler{\\n        [&](std::vector<Document> docs, LiveQueryEvent event) {\\n            event.hash(docs); // e.g. `1950015808188223905`\\n            event.hash_mnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n            // ...\\n      });\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `set_access_license` and added a new function, `set_license_token`,\\n  which will throw an appropriate exception if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `start_sync` and added a new function, `try_start_sync`, which will\\n  throw an exception if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `set_license_token`.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DocumentPath`, `MutableDocumentPath`, and\\n`DocumentIdPath` types to allow accessing a nested value in a document/ID as a\\n`nlohmann::json`.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Improve SDK API documentation extensively\\n* Fix crash that can occur if a Ditto `Identity` is passed by value\\n* Fix bug where sync may fail if an unusually long `deviceName` is configured","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Added a Linux x86_64 version of the C++ to the group of published C++ SDKs.\\n* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `ONLINE` and `ONLINE_PLAYGROUND.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `ONLINE_PLAYGROUND` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `PRODUCTION` identity has been renamed to `MANUAL`.\\n* Added an `Authenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added an `AuthenticationDelegate` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"latest":{"description":"- Added: method `set_offline_only_license_token()` to class `Ditto` as replacement for now deprecated `set_license_token()`.\\n- Deprecated: method `set_license_token()` of class `Ditto`, please use newly added `set_offline_only_license_token()` instead.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.129Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Added `WriteStrategy` enum.\\n- Added method `insert_with_strategy()` to `Collection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added `is_authenticated()` and `user_id()` methods to `Authenticator`.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.918Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.988Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.956Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.711Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: accessor `get_is_sync_active()` to class `Ditto`.\\n- Added: method `logout()` to class `Authenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `Authenticator` and `AuthenticationCallback`).\\n- Added: method `upsert()` to classes `Collection` and `ScopedWriteTransaction` (as a replacement for `insert()` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Added: (missing) accessor `get_auth()` to class `Ditto`.\\n- Deprecated: accessors `is_authenticated()` and `user_id()` of class `Authenticator` in favor of newly introduced accessor `get_status()`.\\n- Deprecated: methods `insert()` & frinds of classes `Collection` and `ScopedWriteTransaction` in favor of newly introduced `upsert()`.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.093Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.844Z"},"1.1.2":{"description":"- Added: method `set_offline_only_license_token()` to class `Ditto` as replacement for now deprecated `set_license_token()`.\\n- Deprecated: method `set_license_token()` of class `Ditto`, please use newly added `set_offline_only_license_token()` instead.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.2/api-reference/","date_released":"2022-02-25T16:13:25.129Z"}}},"rustsdk":{"Ditto":{"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.\\n* Permit `FnMut` event handlers for live queries.\\n* Add support for the Presence V2 API via `Ditto::observe_peers_v2`.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"latest":{"description":"- Added: method `set_offline_only_license_token()` to type `Ditto` as replacement for now deprecated `set_license_token()`.\\n- Deprecated: method `set_license_token()` of type `Ditto`, please use newly added `set_offline_only_license_token()` instead.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.2/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-02-25T16:13:25.129Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.888Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.598Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.918Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.988Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.956Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.632Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.711Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.095Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Experimental mesh roles API\\n  - Added: `set_mesh_role()` method to `Peer` class\\n  - Added: `set_priority_for_mesh_role()` to `Peer` class\\n- Fixed: An incorrect error from `find_by_id(\\"some_id\\").exec()` when a document wasn\'t found.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-02-12T05:38:19.845Z"},"1.1.2":{"description":"- Added: method `set_offline_only_license_token()` to type `Ditto` as replacement for now deprecated `set_license_token()`.\\n- Deprecated: method `set_license_token()` of type `Ditto`, please use newly added `set_offline_only_license_token()` instead.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.2/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-02-25T16:13:25.129Z"}}}}')}}]);