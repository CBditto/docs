"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4524],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,y=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(y,o(o({ref:t},s),{},{components:n})):a.createElement(y,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},79443:function(e,t,n){var a=(0,n(67294).createContext)(void 0);t.Z=a},80944:function(e,t,n){var a=n(67294),r=n(79443);t.Z=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e}},30547:function(e,t,n){var a=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},49366:function(e,t,n){var a=n(67294),r=n(80944),i=n(86010);t.Z=function(e){var t,n=e.lazy,o=(e.block,e.defaultValue),l=e.values,u=e.groupId,c=(e.className,a.Children.toArray(e.children)),s=null!=l?l:c.map((function(e){return{value:e.props.value,label:e.props.label}})),p=null!=o?o:null==(t=c.find((function(e){return e.props.default})))?void 0:t.props.value,d=(0,r.Z)(),m=d.tabGroupChoices,y=d.setTabGroupChoices,g=(0,a.useState)(p),f=g[0],v=g[1];if(null!=u){var h=m[u];null!=h&&h!==f&&s.some((function(e){return e.value===h}))&&v(h)}var b=function(e){v(e),null!=u&&y(u,e)};return a.createElement("div",{className:"tabs-container"},a.createElement("div",{className:"sm:hidden"},a.createElement("label",{htmlFor:"tabs",className:"sr-only"},"Select a tab"),a.createElement("select",{id:"tabs",name:"tabs",value:f,onChange:function(e){return b(e.currentTarget.value)},className:"block w-full focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md"},s.map((function(e){var t=e.value,n=e.label;return a.createElement("option",{value:t,key:t},null!=n?n:t)})))),a.createElement("div",{className:"hidden sm:block"},a.createElement("nav",{className:"flex space-x-4","aria-label":"Tabs"},s.map((function(e){var t=e.value,n=e.label;return a.createElement("button",{key:t,onClick:function(){return b(t)},className:(0,i.Z)(f===t?"bg-blue-100 text-blue-700":"text-gray-500 hover:text-gray-700","px-3 py-2 font-medium text-sm rounded-md"),"aria-current":f===t?"page":void 0},null!=n?n:t)})))),n?(0,a.cloneElement)(c.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},c.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==f})}))))}},36044:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return y}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),o=n(49366),l=n(30547),u=["components"],c={title:"Online Playground",sidebar_position:2},s=void 0,p={unversionedId:"security/online-playground",id:"security/online-playground",isDocsHomePage:!1,title:"Online Playground",description:"DO NOT publish an app with Ditto to an end customer with an Online Playground configuration. We call this a Playground because it's meant for learning without having to implement any true security. For production deployments, use With Authentication.",source:"@site/docs/security/online-playground.mdx",sourceDirName:"security",slug:"/security/online-playground",permalink:"/security/online-playground",editUrl:"https://github.com/getditto/docs/edit/master/docs/security/online-playground.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Online Playground",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/concepts/security"},next:{title:"Overview",permalink:"/security/online-with-authentication/overview"}},d=[],m={toc:d};function y(e){var t=e.components,c=(0,r.Z)(e,u);return(0,i.kt)("wrapper",(0,a.Z)({},m,c,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("strong",{parentName:"p"},"DO NOT")," publish an app with Ditto to an end customer with an Online Playground configuration. We call this a Playground because it's meant for learning without having to implement any true security. For production deployments, use ",(0,i.kt)("strong",{parentName:"p"},"With Authentication"),"."))),(0,i.kt)("p",null,"Experimental, demos, proof of concept apps, or beginners should really start with an online playground application. Online playground apps are simply apps that can sync with nearby peer to peer devices and with the cloud that have the same ",(0,i.kt)("inlineCode",{parentName:"p"},"appID"),". Online playground identities have ",(0,i.kt)("strong",{parentName:"p"},"no restrictions to data")," and each peer is randomly assigned a unique ",(0,i.kt)("inlineCode",{parentName:"p"},"userID"),". Online playground identities are perfect for learning about how to use Ditto's APIs without worrying about security architecture."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Apps with Online Playground can read and write to all collections."),(0,i.kt)("li",{parentName:"ul"},"Apps with Online Playground will connect to other peer devices or a cloud app with ",(0,i.kt)("strong",{parentName:"li"},"same appID"),".")),(0,i.kt)("p",null,"To use Online Playground, go to your app in the Ditto portal and find the ",(0,i.kt)("strong",{parentName:"p"},"Authentication Mode & Webhook Settings")," section. Ensure that ",(0,i.kt)("strong",{parentName:"p"},'"Playground"')," is selected like so:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Online Playground enabled in the Ditto Portal",src:n(43797).Z})),(0,i.kt)("p",null,"Now in your client app, construct your Ditto instance with an online playground identity:"),(0,i.kt)(o.Z,{groupId:"programming-language",defaultValue:"javascript",values:[{label:"JavaScript",value:"javascript"},{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"},{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"},{label:"C#",value:"csharp"},{label:"C++",value:"cpp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"javascript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { init, Ditto } from \"@dittolive/ditto\"\n(async () => {\n  await init() // you need to call this at least once before using any of the Ditto API\n  const identity = { type: 'onlinePlayground', appID: 'REPLACE_ME_WITH_YOUR_APP_ID' }\n  const ditto = new Ditto(identity, '/persistence/file/path')\n  ditto.tryStartSync()\n})()\n"))),(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'let ditto = Ditto(identity: DittoIdentity.onlinePlayground(appID: "REPLACE_ME_WITH_YOUR_APP_ID"))\ntry! ditto.tryStartSync()\n'))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'DITIdentity *identity = [[DITIdentity alloc] initOnlinePlaygroundWithAppID:@"REPLACE_ME_WITH_YOUR_APP_ID"];\nDITDitto *ditto = [[DITDitto alloc] initWithIdentity:identity];\nNSError *error = nil;\n[ditto tryStartSync:&error];\n'))),(0,i.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'try {\n  val androidDependencies = AndroidDittoDependencies(context)\n  val identity = DittoIdentity.OnlinePlayground(androidDependencies, appID = "REPLACE_ME_WITH_YOUR_APP_ID")\n  val ditto = Ditto(androidDependencies, identity)\n  ditto.tryStartSync()\n} catch(e: DittoError) {\n  Log.e("Ditto error", e.message!!)\n}\n'))),(0,i.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'DittoDependencies androidDependencies = new DefaultAndroidDittoDependencies(this.context);\nDittoIdentity identity = new DittoIdentity.OnlinePlayground(androidDependencies, "REPLACE_ME_WITH_YOUR_APP_ID");\nDitto ditto = new Ditto(androidDependencies, identity);\n\ntry {\n  ditto.tryStartSync();\n} catch(DittoError e) {\n  Log.e("Ditto Error", e.getMessage())\n}\n'))),(0,i.kt)(l.Z,{value:"csharp",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'try\n{\n    var ditto = new Ditto(DittoIdentity.OnlinePlayground("REPLACE_ME_WITH_YOUR_APP_ID"));\n    ditto.TryStartSync();\n}\ncatch (DittoException ex)\n{\n    System.Console.WriteLine($"Ditto Error {ex.Message}");\n}\n'))),(0,i.kt)(l.Z,{value:"cpp",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'auto identity = Identity::OnlinePlayground("REPLACE_ME_WITH_YOUR_APP_ID");\ntry {\n  Ditto ditto = Ditto(identity, "/your-persistence-path");\n  ditto.try_start_sync();\n} catch (const DittoError &err) {\n  std::cout << err.what() << std::endl;\n}\n'))),(0,i.kt)(l.Z,{value:"rust",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'use dittolive_ditto::prelude::*;\nuse std::sync::Arc;\nuse std::time::Duration;\n\nlet mut ditto = Ditto::builder()\n    // creates a `ditto_data` folder in the directory containing the executing process\n    .with_root(Arc::new(PersistentRoot::current_exe()?))\n    .with_identity(|ditto_root| {\n      // Provided as an env var, may also be provided as hardcoded string\n      let app_id = AppId::from_env("DITTO_APP_ID")?;\n      let enable_cloud_sync = true;\n      let custom_auth_url = None;\n      // return the Result<Identity, _> at the end of this closure\n      OnlinePlayground::new(ditto_root, app_id, enable_cloud_sync, custom_auth_url)\n    })\n    .with_transport_config(|_identity| {\n        let mut config = TransportConfig::enable_all_peer_to_peer()\n    })\n    .build()?;\n\nditto.try_start_sync()?;\n')))),(0,i.kt)("p",null,"Now your application will automatically sync with any near by peers and cloud apps with the same ",(0,i.kt)("inlineCode",{parentName:"p"},"appID"),"."))}y.isMDXComponent=!0},86010:function(e,t,n){function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})},43797:function(e,t,n){t.Z=n.p+"assets/images/portal-playground-setting-31fac4d3a747b58e2a63d306e7ba3162.png"}}]);